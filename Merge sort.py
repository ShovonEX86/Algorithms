# -*- coding: utf-8 -*-
"""task01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qh8507FhRbv2xrall1q6cMl6vKHvawkH
"""

input = open('input1.txt','r')
output = open('output1.txt','w')

n = int(input.readline())
arr = list(map(int,input.readline().split()))

def mergeSort(arr,low,high):
    if len(arr) <= 1: return arr
    if low<high:
        mid = (low+high)//2
        mergeSort(arr,low,mid)
        mergeSort(arr,mid+1,high)
        merge(arr,low,mid,high)
        return arr

def merge(arr,low,mid,high):
    len1 = mid - low + 1
    len2 = high - mid
    lis1, lis2  = [0]*len1, [0]*len2

    for i in range(0,len1):
        lis1[i] = arr[low+i]

    for j in range(0,len2):
        lis2[j] = arr[mid+1+j]

    i, j, k = 0, 0, low

    while(i<len1 and j<len2):
        if lis1[i] <= lis2[j]:
            arr[k] = lis1[i]
            i += 1
        else:
            arr[k] = lis2[j]
            j += 1
        k += 1

    while i<len1:
        arr[k] = lis1[i]
        i += 1
        k += 1

    while j<len1:
        arr[k] = lis2[j]
        j += 1
        k += 1
    return arr

mergeSort(arr,0,n-1)
for i in range(n):
    output.write(f'{arr[i]} ')

input.close()
output.close()

